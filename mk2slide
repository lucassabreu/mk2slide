#!/bin/bash

[[ -z ${1+x} ]] || [[ "$@" =~ '-h' ]] || [[ "$@" =~ '--help' ]] && {
    echo "Turn a markdown into a slide

Usage:

$0 <presentation.md> [output.html] [options]

-h to get this help
--help to get this help

Where options may be:
--open-in-browser

    "
    exit 0
}

input_file="$(realpath $1)"

[[ ! -f $input_file ]] && {
    echo "File at $input_file not found !"
    exit 1
}

[[ ! -z $2 && ! "$2" =~ "--" ]] && output_file="$(realpath $2)"

[[ -z $output_file ]] && output_file="$(echo $input_file | rev | cut -d "."  -f1 --complement | rev ).html"

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
[[ -L "$0" ]]; SCRIPT_DIR=$( cd "$( dirname "$( readlink -f "$0" )" )" && pwd )

cd $SCRIPT_DIR;

alteredInputFile=/tmp/$(date +%s).html

cat "$input_file" | tr '\n' '\r'  | sed -r 's|(`{3})([A-Za-z]{0,})([^`]*)(`{3})|<pre><code class="\2">\3</code></pre>|g' | tr '\r' '\n' > $alteredInputFile


pandoc --standalone --from markdown --to html5 \
	--template $SCRIPT_DIR/template.html --self-contained \
	"$alteredInputFile" | sed 's|<hr.*/>|</section>\n    <section>|' > $output_file
EXIT_CODE=$?

[[ "$@" =~ "--open-in-browser" ]] && {
    $BROWSER $output_file
    EXIT_CODE=$?
}

exit $EXIT_CODE
